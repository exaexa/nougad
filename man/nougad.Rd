% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nougad.R
\name{nougad}
\alias{nougad}
\title{Non-linear unmixing by gradient descent}
\usage{
nougad(
  mixed,
  spectra,
  rnw = 1,
  rpw = 1,
  nw = 1,
  start = 0,
  alpha = 0.01,
  accel = 1,
  iters = 250L
)
}
\arguments{
\item{mixed}{n*d matrix of measurements}

\item{spectra}{k*d matrix of spectra, norm of rows must be 1}

\item{rnw}{negative weights for residual (converted to vector of size d)}

\item{rpw}{positive weights for residual (converted to vector of size d)}

\item{nw}{weights of non-negative learning factor (converted to a
vector of size k)}

\item{start}{starting points for the gradient descent}

\item{alpha}{learning rate, preferably low to prevent numeric problems}

\item{accel}{acceleration factor applied independently for each dimension if
the convergence direction in that dimension is the same as in
the last iteration.}

\item{iters}{number of iterations}
}
\value{
a list with \code{unmixed} n\emph{k matrix and \code{residuals} n}d matrix, so that
\code{mixed = unmixed \%*\% spectra + residuals}
}
\description{
Run a gradient descent for each (row) measurement in \code{mixed}, extracting how
much of \code{spectra} is contained in each measurement.
Gradient descent runs for \code{iters} iterations, with learning rate \code{alpha} and
AdaProp-style acceleration factor \code{accel} in each dimension.
}
\details{
Additionally, the result may be weighted towards non-negative region in each
result dimension by weights \code{nw}. Residual error is weighted by vectors
\code{rnw} (in case the residual in the dimension is negative) and \code{rpw}
(in case the residual is positive). The latter allows one to implicitly
force a non-negative or non-positive residual.

The method should behave like OLS for rnw,rpw=1 and nw=0.
}
